import{system,world,EntityEquippableComponent,EquipmentSlot,ItemStack,MolangVariableMap}from"@minecraft/server";import{addScore,addEffect,setScore,getScore,takeOneItem,w}from"./functions.js";import{backpacks_names,backpacks_event}from"./backpack.js";import{blokedItems_events}from"./blockedItems.js";import{bodypartSpawn,bodypart_events,bodypartItemCompleteUse,bodypartEntityHurt,hitStoneOrLog}from"./bodypart.js";import{bossProjectileHit,bossHealth}from"./boss.js";import{doTutoHitBlock,doTutoBreakBlock,doTutoItemCompleteUse,doTutoHitEntity,doTutoItemUse,tutoEvent,initial,exitStartTutorial,handleLevelTuto,handleStartTutorial}from"./doTuto.js";import{Durability,itemsDamage,giveSavedInventory,BreakBlock}from"./itemsDamage.js";import{lensFlareSpawn,lensSun_events}from"./lens_sun.js";import{sleepingBag_events}from"./sleepingbag.js";import{structure_events}from"./structures.js";import{systemLevel_events,systemLevelSpawn,systemLevelHurt,systemLevelItemUse,systemLevelHitBlock,systemLevelItemUseOn,systemLevelBreakBlock,systemLevel_projectileHit,systemLevel_itemRelease,systemLevelItemCompleteUse,systemLevel_projectileHitBlock}from"./system_level.js";import{tempSpawn,tempEvents}from"./temp.js";import{thirstBarSpawn,thirstBar_itemCompleteUse,thirstBar_itemUseOn,thirstBar_reactiveBar,thirstBarEvents}from"./thirts.js";import{add_trinket,fix_trinket,trinketEvents}from"./trinket.js";import{warpstoneHitEntity,warpstoneNames}from"./warpstone.js";import{tombsHitEntity,tombsSpawn,tombs_event,tombsItemCompleteUse}from"./gravestone.js";import{entityEffect,entityTiers,damageIndicator}from"./entityEffects.js";import{scores_initial}from"./scores_initial.js";import{guideBook}from"./guidebook.js";import{onEvent as onTreeSpiritEvent,tick as treeSpiritTick,DATA as treeSpiritData}from"./tree_spirit";import{onEvent as onDeadShooterEvent,tick as deadShooterTick,DATA as deadShooterData}from"./dead_shooter";import{hitEntity as deadShooterArrowHitEntity,hitBlock as deadShooterArrowHitBlock}from"./deadshooter_arrow";import{hitEntity as golemTreeHitEntity}from"./golem_tree";import{onEvent as onScorpionEvent,onAttack as scorpionAttack,tick as scorpionTick,DATA as scorpionData}from"./scorpion";import{onEvent as onCyclopsEvent,DATA as cyclopsData,tick as cyclopsTick}from"./cyclops";import{onEvent as onShogunEvent,onAttack as shogunAttack}from"./shogun";import{onEvent as onBoarEvent,onAttack as boarAttack}from"./boar";import{onEvent as onPumpkinkidoEvent,onAttack as pumpkinkidoAttack}from"./pumpkinkido";import{onEvent as onGolemEvent,DATA as golemData,tick as golemTick}from"./golem";import{events as DeathKnightEvents,onKill as DeathKnightOnKill}from"./deathKnight.js";import{onStartup as bushStartup}from"./custom_bush";import{onStartup as mushroomStartup}from"./blocks/mushroom";import{onStartup as foliageStartup}from"./blocks/foliage";import{onStartup as flowerBedStartup}from"./blocks/flower_bed";import{onStartup as pumpkinStartup}from"./blocks/pumpkin";import{onStartup as golemStartup}from"./blocks/golem_spawner";import{onInteract,onPlace,onDestroy,onClose}from"./bigDoor.js";import{events as snailEvents}from"./bigSnail.js";import{events as queenEvents}from"./antQueen.js";import{events as serpentEvents}from"./seaSerpent.js";import{onDamage,importantItems}from"./rat.js";import{handleEntitySpawn,handleDataDrivenTrigger,handleEntityDie,handleEntityHurt}from"./sandworm.js";import{events as griffinEvents}from"./griffin.js";world.afterEvents.entitySpawn.subscribe(t=>{try{const e=t.entity;backpacks_names(e),warpstoneNames(e),entityTiers(e),handleEntitySpawn(t)}catch(t){}}),world.afterEvents.projectileHitBlock.subscribe(t=>{try{const e=t.source,o=t.projectile,r=t.location;systemLevel_projectileHitBlock(o,e,r),deadShooterArrowHitBlock(o)}catch(t){}}),world.afterEvents.playerSpawn.subscribe(t=>{try{const e=t.player,o=e.getTags(),r=e.getViewDirection(),n=e.location;fix_trinket(e,o,r,n),e.hasTag("start_game")||scores_initial(e),e.hasTag("initial")||initial(e),e.hasTag("boss_title_tp")&&exitStartTutorial(e),bodypartSpawn(e),tombsSpawn(e),lensFlareSpawn(e),systemLevelSpawn(e),tempSpawn(e),thirstBarSpawn(e),e.removeTag("dead_trinket"),world.gameRules.commandBlockOutput=!1,world.gameRules.sendCommandFeedback=!1,world.gameRules.showTags=!1}catch(t){}}),world.afterEvents.playerLeave.subscribe(t=>{try{const e=t.playerName;["hfrlc:lens_sun","hfrlc:trinket_menu"].forEach(t=>{w.getEntities({type:t,tags:[e]}).forEach(t=>t.remove())})}catch(t){}}),world.afterEvents.entityDie.subscribe(t=>{try{const e=t.deadEntity,o=t.damageSource.damagingEntity;handleEntityDie(t),"minecraft:player"==e.typeId&&(e.hasTag("saving_grace")&&(e.removeTag("saving_grace"),e.triggerEvent("hfrlc:systemLevelDeath"),setScore(e,"saving_grace",0)),tombs_event(e)),"hfrlc:death_knight"===o.typeId&&DeathKnightOnKill(o,e)}catch(t){}}),world.afterEvents.dataDrivenEntityTrigger.subscribe(t=>{try{const e=t.entity,o=t.eventId;if(backpacks_event(e,o),bodypart_events(e,o),tutoEvent(e,o),sleepingBag_events(e,o),structure_events(e,o),systemLevel_events(e,o),tempEvents(e,o),thirstBarEvents(e,o),trinketEvents(e,o),lensSun_events(e,o),blokedItems_events(e,o),onClose(e,o),snailEvents(e,o),queenEvents(e,o),serpentEvents(e,o),DeathKnightEvents(e,o),onTreeSpiritEvent(t),onDeadShooterEvent(t),onScorpionEvent(t),onCyclopsEvent(t),onShogunEvent(t),onBoarEvent(t),onPumpkinkidoEvent(t),onGolemEvent(t),handleDataDrivenTrigger(t),griffinEvents(e,o),"hfrlc:weapon13_durability"==o){const t=e.getComponent(EntityEquippableComponent.componentId).getEquipment(EquipmentSlot.Mainhand);"hfrlc:weapon_13"==t.typeId&&(Durability(t,e),e.playSound("item.shield.block"),e.dimension.spawnEntity("hfrlc:weapon13_knockback",e.location))}}catch(t){}}),world.afterEvents.playerDimensionChange.subscribe(t=>{try{const e=t.player;thirstBar_reactiveBar(e)}catch(t){}}),world.afterEvents.entityHitBlock.subscribe(t=>{try{const e=t.damagingEntity,o=t.hitBlock;"minecraft:player"==e.typeId&&(systemLevelHitBlock(e,o),doTutoHitBlock(e,o))}catch(t){}}),world.beforeEvents.playerBreakBlock.subscribe(t=>{try{const e=t.player,o=t.block,r=[o.location.x,o.location.y,o.location.z],n=e.getComponent(EntityEquippableComponent.componentId).getEquipment(EquipmentSlot.Mainhand),a=e.getGameMode();let s;system.run(()=>{n&&n.hasTag("hfrlc:break_block")&&"creative"!=a&&BreakBlock(n,e)}),doTutoBreakBlock(e,o,r,n,a),systemLevelBreakBlock(e,n,r,s,o),hitStoneOrLog(e,o,r,n,a,t)}catch(t){}}),world.afterEvents.itemCompleteUse.subscribe(t=>{try{const e=t.source,o=t.itemStack;"hfrlc:scorpion_tails"===o.typeId&&(addEffect(e,"poison",30,2,!1),addEffect(e,"strength ",100,2,!1)),bodypartItemCompleteUse(e,o),thirstBar_itemCompleteUse(o,e),doTutoItemCompleteUse(e,o),tombsItemCompleteUse(e,o),systemLevelItemCompleteUse(e,o)}catch(t){}});const flintCooldownPlayers=new Set;world.beforeEvents.itemUseOn.subscribe(t=>{try{const e=t.source,o=t.itemStack,r=t.block,n=r.location,a=[n.x,n.y,n.z];if(systemLevelItemUseOn(e,o,r,a),thirstBar_itemUseOn(e,o,r,a),"minecraft:flint"==o.typeId&&(r.hasTag("minecraft:is_pickaxe_item_destructible")&&!e.hasTag("do_tuto0")||"minecraft:stone"==r.typeId&&e.hasTag("do_tuto0"))){if(flintCooldownPlayers.has(e.id))return;flintCooldownPlayers.add(e.id),system.runTimeout(()=>flintCooldownPlayers.delete(e.id),2),system.run(()=>{e.playSound("random.flint_hit"),e.playAnimation("animation.rl_craft.player_third_person.empty_hand.attack")});3===Math.floor(3*Math.random())+1&&system.run(()=>{const o=t.blockFace,r={x:a[0]+.5,y:a[1]+.5,z:a[2]+.5},n={Up:()=>r.y+=.5,Down:()=>r.y-=1.5,North:()=>r.z-=1,South:()=>r.z+=1,West:()=>r.x-=1,East:()=>r.x+=1};n[o]?.(),takeOneItem(e),e.dimension.spawnEntity("hfrlc:flint_shard_item",r),e.playSound("random.flint_break")})}else"minecraft:decorated_pot"==r.typeId&&importantItems.has(o.typeId)&&(t.cancel=!0)}catch(t){}}),world.afterEvents.itemReleaseUse.subscribe(t=>{try{const e=t.source,o=t.itemStack;systemLevel_itemRelease(e,o),o&&e.hasTag("durability")&&(Durability(o,e),e.removeTag("durability"))}catch(t){}}),world.afterEvents.itemUse.subscribe(t=>{try{const e=t.source,o=t.itemStack;guideBook(e,o),systemLevelItemUse(e,o),o&&e.hasTag("durability")&&(Durability(o,e),e.removeTag("durability")),doTutoItemUse(e,o)}catch(t){}}),world.afterEvents.entityHitEntity.subscribe(async t=>{try{const e=t.hitEntity,o=t.damagingEntity;if(scorpionAttack(t),shogunAttack(t),boarAttack(t),pumpkinkidoAttack(t),"minecraft:player"==o.typeId){const t=o.getComponent(EntityEquippableComponent.componentId).getEquipment(EquipmentSlot.Mainhand);tombsHitEntity(e,o),warpstoneHitEntity(e,o),doTutoHitEntity(o,t)}}catch(t){}}),world.afterEvents.entityHurt.subscribe(async t=>{try{const e=t.hurtEntity,o=t.damageSource.cause,r=Math.round(t.damage),n=t.damageSource.damagingEntity;let a;itemsDamage(n,e,a,o,r),bossHealth(n,e),entityEffect(n,e,a),systemLevelHurt(n,e,a,o,r),damageIndicator(e,o,r,n),handleEntityHurt(t);const s=e.getComponent("health");if(!s)return;const i=s.currentValue;if(bodypartEntityHurt(e,r,i,o,s,a),!n||!e)return;onDamage(n,e)}catch(t){}}),world.afterEvents.projectileHitEntity.subscribe(t=>{try{const e=t.projectile,o=t.getEntityHit().entity,r=t.source,n=t.hitVector;bossProjectileHit(e,o),systemLevel_projectileHit(o,r),deadShooterArrowHitEntity(e,o,n),golemTreeHitEntity(e,o,n)}catch(t){}}),world.beforeEvents.worldInitialize.subscribe(t=>{try{bushStartup(t),mushroomStartup(t),foliageStartup(t),flowerBedStartup(t),pumpkinStartup(t),golemStartup(t);const e=t.blockComponentRegistry;e.registerCustomComponent("hfrlc:big_door",{onPlayerInteract:t=>{onInteract(t)}}),e.registerCustomComponent("hfrlc:multiblock",{beforeOnPlayerPlace:t=>{onPlace(t)},onPlayerDestroy:t=>{onDestroy(t)}}),e.registerCustomComponent("hfrlc:pickable",{onPlayerInteract:t=>{const e=t.block,o=t.player,r=o.getComponent("inventory").container,n=e.getTags().filter(t=>t.startsWith("hfrlc:pickable-"))[0].split("-")[1],a=new ItemStack(n);e.setType("minecraft:air"),r.addItem(a),e.dimension.playSound("random.pop",o.location)}})}catch(t){}}),system.afterEvents.scriptEventReceive.subscribe(t=>{try{const{id:e,sourceEntity:o,message:r}=t,n=o?.typeId;switch(e){case"hfrlc:trinketMenuTuto":return void add_trinket(o,"hfrlc:goat_horns",0);case"hfrlc:levelTuto":return void handleLevelTuto(o);case"hfrlc:start_tutorial":return void handleStartTutorial(o);case"hfrlc:tick_entity":const t={[treeSpiritData.id]:treeSpiritTick,[deadShooterData.id]:deadShooterTick,[scorpionData.id]:scorpionTick,[scorpionData.baby_id]:scorpionTick,[cyclopsData.id]:cyclopsTick,[golemData.id]:golemTick}[n];return void(t&&t(o))}}catch(t){}});