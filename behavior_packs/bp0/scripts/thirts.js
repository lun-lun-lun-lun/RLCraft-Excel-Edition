import{system,world,EntityEquippableComponent,EquipmentSlot,ItemStack}from"@minecraft/server";import{updateThirst}from"./thirst_controller.js";import{reactive_temp}from"./temp_sphere.js";import{addEffect,getScore,setScore,addScore}from"./functions.js";export function thirstBarEvents(t,e){switch(e){case"hfrlc:dead_thirst":t.addTag("dead_thirst"),setScore(t,"thirst",37800);break;case"hfrlc:thirstBarLoop":t.hasTag("active_thirts")&&updateThirst(t);break;case"hfrlc:workstate0":case"hfrlc:workstate1":case"hfrlc:workstate2":const r=parseInt(e.slice(-1),10);setScore(t,"workstate",r);break;case"hfrlc:lowThirstEffects":{const e=t.getGameMode();"spectator"!==e&&"creative"!==e&&t.hasTag("active_thirts")&&!t.hasTag("desactive_thirst")&&!t.hasTag("panacea")&&!t.hasTag("dragon_slayer")&&!t.hasTag("ancient")&&getScore(t,"thirst")<=12599&&addEffect(t,"slowness",80,0,!1);break}case"hfrlc:detectWaterFlasks":const a=t.getComponent("inventory").container;for(let t=0;t<a.size;t++){const e=a.getItem(t);"hfrlc:water_flasks"!==e?.typeId||e.getLore()[0]||(e.setLore(["\n§eThere are still 5 uses left"]),a.setItem(t,e))}break;default:if(e.startsWith("hfrlc:titlethirstbar")){const r=t.getGameMode();if("spectator"!==r&&"creative"!==r&&!t.hasTag("desactive_thirst"))for(let r=0;r<=20;r++)if(e===`hfrlc:titlethirstbar${r}`)return void t.onScreenDisplay.setTitle(`thirstbar${r};`)}}}export function thirstBar_itemUseOn(t,e,r,a){if(!e.typeId.includes("water_flasks"))return;const i=t.getComponent(EntityEquippableComponent.componentId),s=new ItemStack("hfrlc:water_flasks"),n=()=>{system.run(()=>{t.playSound("bucket.empty_water"),i.setEquipment(EquipmentSlot.Mainhand,s)})};if("minecraft:cauldron"===r.typeId){const t=r.permutation,e=t.getState("cauldron_liquid"),a=t.getState("fill_level");"water"===e&&a>0&&n()}else"minecraft:water"===r.typeId&&n()}export function thirstBar_reactiveBar(t){system.runTimeout(()=>{reactive_thirst(t)},30)}export function thirstBar_itemCompleteUse(t,e){const r=t.typeId,a=getScore(e,"thirst"),i=getScore(e,"thermometer"),s=t=>{a<=35999&&(addScore(e,"thirst",t),reactive_thirst(e))},n=t=>{i>7200&&addScore(e,"thermometer",t)},m=[{match:["_stew","_soup"],thirst:9899,therm:-1200},{match:["minecraft:potion"],thirst:6e3,therm:-800},{match:["minecraft:dragon_breath"],thirst:38e3,thermSet:6e3},{match:["minecraft:honey_bottle"],thirst:6e3,therm:-1200},{match:["minecraft:golden_apple","minecraft:golden_carrot","minecraft:enchanted_golden_apple"],thirst:2e3,thermSet:6e3},{match:["minecraft:sweet_berries","minecraft:glow_berries","minecraft:melon_slice","minecraft:apple","hfrlc:pumpkin_slice","hfrlc:heal1","hfrlc:heal2","hfrlc:heal3"],thirst:2e3,therm:-400},{match:["hfrlc:blue_bush_fruit"],thirst:2e3,thermDirect:Math.max(100-i,-1200)},{match:["hfrlc:orange_bush_fruit"],thirst:2e3,thermDirect:Math.min(12e3-i,1200)}];if("hfrlc:water_flasks"===r){const r=parseFloat(t.getLore()[0].replace("\n§eThere are still ","").split(" uses left")[0]),a=e.getComponent(EntityEquippableComponent.componentId);return r>1?(s(9899),n(-1200),t.setLore([`\n§eThere are still ${r-1} uses left`]),a.setEquipment(EquipmentSlot.Mainhand,t)):1===r&&a.setEquipment(EquipmentSlot.Mainhand,new ItemStack("hfrlc:water_flasks_empty")),void e.onScreenDisplay.setActionBar({rawtext:[{text:""+(r-1)},{translate:"water_flasks.uses"}]})}for(const{match:t,thirst:a,therm:i,thermSet:h,thermDirect:o}of m)if(t.some(t=>r.includes(t))){a&&s(a),"number"==typeof i&&n(i),"number"==typeof h&&setScore(e,"thermometer",h),"number"==typeof o&&addScore(e,"thermometer",o);break}}export function thirstBarSpawn(t){t.hasTag("active_thirts")&&(t.removeTag("dead_thirst"),system.runTimeout(()=>{reactive_thirst(t)},30))}const thirstLevels=[{min:36e3,max:38e3,title:"thirstbar20"},{min:34200,max:35999,title:"thirstbar19"},{min:32400,max:34199,title:"thirstbar18"},{min:30600,max:32399,title:"thirstbar17"},{min:28800,max:30599,title:"thirstbar16"},{min:27e3,max:28799,title:"thirstbar15"},{min:25200,max:26999,title:"thirstbar14"},{min:23400,max:25199,title:"thirstbar13"},{min:21600,max:23399,title:"thirstbar12"},{min:19800,max:21599,title:"thirstbar11"},{min:18e3,max:19799,title:"thirstbar10"},{min:16200,max:17999,title:"thirstbar9"},{min:14400,max:16199,title:"thirstbar8"},{min:12600,max:14399,title:"thirstbar7"},{min:10800,max:12599,title:"thirstbar6"},{min:9e3,max:10799,title:"thirstbar5"},{min:7200,max:8999,title:"thirstbar4"},{min:5400,max:7199,title:"thirstbar3"},{min:3600,max:5399,title:"thirstbar2"},{min:1800,max:3599,title:"thirstbar1"},{min:0,max:1799,title:"thirstbar0"}];export function reactive_thirst(t){const e=t.getGameMode();if("spectator"!=e&&"creative"!=e){const e=getScore(t,"thirst")||0;for(const r of thirstLevels)e>=r.min&&e<=r.max&&(!t.hasTag("desactive_thirst")&&t.hasTag("active_thirts")&&t.onScreenDisplay.setTitle(`${r.title};`),system.runTimeout(()=>{reactive_temp(t)},20))}}