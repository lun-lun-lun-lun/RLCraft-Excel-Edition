import{world}from"@minecraft/server";const nameMap={"hfrlc:backpack_visual_mid":"Backpack Medium","hfrlc:backpack_visual":"Backpack Small","hfrlc:backpack_visual_big":"Backpack Big"};export function backpacks_names(a){nameMap[a.typeId]&&(a.nameTag=nameMap[a.typeId])}export function backpacks_event(a,e){switch(e){case"wear":handleWearEvent(a);break;case"hfrlc:dead_backpack":world.gameRules.keepInventory||world.isHardcore||a.triggerEvent("active_dismount_backpack");break;case"active_dismount_backpack":handleDismountEvent(a)}}function handleWearEvent(a){if(nameMap[a.typeId])for(const e of world.getPlayers()){if(!e.hasTag("active_backpack_event"))continue;const c={x:a.location.x,y:-63,z:a.location.z};a.teleport(c);const t=Math.random().toString(36).slice(2,10),n=`${a.typeId.replace("hfrlc:","")}_${t}_${e.name.replace(/ /g,"_")}`,r={x:c.x+1,y:-62,z:c.z+1},o={x:c.x-1,y:-64,z:c.z-1};world.structureManager.createFromWorld(`mystructure:${n}`,a.dimension,r,o,{includeBlocks:!1,includeEntities:!0,saveMode:"World"}),e.addTag(n),e.removeTag("active_backpack_event"),a.remove()}}function handleDismountEvent(a){const e=a.getTags().filter(a=>a.startsWith("backpack_visual_"));for(const c of e)a.runCommandAsync(`structure load ${c} ~-1~1~-1`),a.runCommandAsync(`structure delete ${c}`),a.triggerEvent("dismount_backpack"),a.removeTag("dismount_backpack"),a.removeTag(c)}