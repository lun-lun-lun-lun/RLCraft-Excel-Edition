import{Block,BlockPermutation,world}from"@minecraft/server";export class Vector{constructor(t,a,e){this.x=t,this.y=a,this.z=e}static add(t,a){return new Vector(t.x+a.x,t.y+a.y,t.z+a.z)}static subtract(t,a){return{x:(t.x??0)-(a.x??0),y:(t.y??0)-(a.y??0),z:(t.z??0)-(a.z??0)}}static distance(t,a){const e=t.x-a.x,c=t.y-a.y,o=t.z-a.z;return Math.hypot(e,c,o)}static multiply(t,a){return"number"==typeof a?{x:t.x*a,y:t.y*a,z:t.z*a}:{x:t.x*a.x,y:t.y*a.y,z:t.z*a.z}}static magnitude(t){return Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z)}static normalize(t){const a=Vector.magnitude(t);return{x:t.x/a,y:t.y/a,z:t.z/a}}static cross(t,a){return{x:t.y*a.z-t.z*a.y,y:t.x*a.z-t.z*a.x,z:t.x*a.y-t.y*a.x}}static getBlockLocalCoord(t,a,e){let c=t.permutation;e&&(c=e);let o=c.getState("facing_direction");if(!o){const t=c.getState("minecraft:facing_direction");if(t)o=t;else{const t=c.getState("minecraft:cardinal_direction");if(t)switch(t){case"north":o=2;break;case"south":o=3;break;case"west":o=4;break;case"east":o=5}else o=3}}let i=0,r=0,s=0;switch(o){case 0:i=a.x??0,r=-a.y??0,s=a.z??0;break;case 1:case 3:i=a.x??0,r=a.y??0,s=a.z??0;break;case 2:i=-a.x??0,r=a.y??0,s=-a.z??0;break;case 4:i=-a.z??0,r=a.y??0,s=a.x??0;break;case 5:i=a.z??0,r=a.y??0,s=-a.x??0}return{x:i+t.location.x,y:r+t.location.y,z:s+t.location.z,localX:i,localY:r,localZ:s}}static getLocalCoords(t,a){if(1==t.isValid()){const e=t?.getViewDirection(),c=this.normalize(new Vector(e.z,0,-e.x)),o=this.normalize(this.cross(c,e)),i={x:(a.x??0)*c.x+(a.y??0)*o.x+(a.z??0)*e.x,y:(a.x??0)*c.y+(a.y??0)*o.y+(a.z??0)*e.y,z:(a.x??0)*c.z+(a.y??0)*o.z+(a.z??0)*e.z},r=this.add(t.location,i);return{x:r.x,y:r.y,z:r.z,localX:i.x,localY:i.y,localZ:i.z}}}static getLocalCoordsXZ(t,a){if(1==t.isValid()){const e=t.getRotation().y*(Math.PI/180),c={x:Math.cos(e),y:0,z:Math.sin(e)},o={x:-Math.sin(e),y:0,z:Math.cos(e)},i={x:(a.x??0)*c.x+(a.z??0)*o.x,y:a.y??0,z:(a.x??0)*c.z+(a.z??0)*o.z};return{x:t.location.x+i.x,y:t.location.y+i.y,z:t.location.z+i.z,localX:i.x,localZ:i.z}}}}